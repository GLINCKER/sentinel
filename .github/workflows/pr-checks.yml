name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  # ============================================================================
  # PR Metadata Validation
  # ============================================================================

  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check PR title follows Conventional Commits
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^[A-Z].+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            starts with an uppercase character.

      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const changes = additions + deletions;

            console.log(`PR has ${additions} additions and ${deletions} deletions (${changes} total changes)`);

            if (changes > 1000) {
              core.setFailed(`This PR is too large (${changes} changes). Consider breaking it into smaller PRs.`);
            } else if (changes > 500) {
              core.warning(`This PR is quite large (${changes} changes). Consider breaking it into smaller PRs.`);
            }

  # ============================================================================
  # Code Review Automation
  # ============================================================================

  label-pr:
    name: Label PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Label based on files changed
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # ============================================================================
  # Check for Breaking Changes
  # ============================================================================

  breaking-changes:
    name: Check Breaking Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for breaking changes
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            const body = (pr.body || '').toLowerCase();

            const hasBreakingLabel = pr.labels.some(label => label.name === 'breaking-change');
            const hasBreakingInTitle = title.includes('breaking') || title.includes('!:');
            const hasBreakingInBody = body.includes('breaking change');

            if ((hasBreakingInTitle || hasBreakingInBody) && !hasBreakingLabel) {
              core.warning('This PR appears to contain breaking changes but is not labeled as such. Please add the "breaking-change" label.');
            }

  # ============================================================================
  # Check Dependencies
  # ============================================================================

  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for dependency changes
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const depFiles = files.filter(file =>
              file.filename === 'Cargo.toml' ||
              file.filename === 'Cargo.lock' ||
              file.filename === 'package.json' ||
              file.filename === 'package-lock.json'
            );

            if (depFiles.length > 0) {
              core.notice('This PR modifies dependencies. Please ensure:');
              core.notice('1. New dependencies are necessary');
              core.notice('2. Licenses are compatible with MIT');
              core.notice('3. No known security vulnerabilities exist');

              depFiles.forEach(file => {
                core.notice(`- ${file.filename} was modified`);
              });
            }
